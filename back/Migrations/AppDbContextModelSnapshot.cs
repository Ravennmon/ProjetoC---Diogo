// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using back.Models;

#nullable disable

namespace back.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.4");

            modelBuilder.Entity("back.Models.Animal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Observacao")
                        .HasColumnType("TEXT");

                    b.Property<int>("OngId")
                        .HasColumnType("INTEGER");

                    b.Property<float>("Peso")
                        .HasColumnType("REAL");

                    b.Property<string>("Porte")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Raca")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Sexo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("TutorId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("OngId");

                    b.HasIndex("TutorId");

                    b.ToTable("Animais");
                });

            modelBuilder.Entity("back.Models.AnimalFoto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AnimalId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AnimalId");

                    b.ToTable("AnimalFotos");
                });

            modelBuilder.Entity("back.Models.Ong", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Cnpj")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Ongs");
                });

            modelBuilder.Entity("back.Models.RedeSocial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("OngId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("TutorId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("OngId");

                    b.HasIndex("TutorId");

                    b.ToTable("RedeSociais");
                });

            modelBuilder.Entity("back.Models.Servico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("OngId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("OngId");

                    b.ToTable("Servicos");
                });

            modelBuilder.Entity("back.Models.Tutor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CpfCnpj")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Tutores");
                });

            modelBuilder.Entity("back.Models.Animal", b =>
                {
                    b.HasOne("back.Models.Ong", "Ong")
                        .WithMany("Animais")
                        .HasForeignKey("OngId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("back.Models.Tutor", "Tutor")
                        .WithMany("Animais")
                        .HasForeignKey("TutorId");

                    b.Navigation("Ong");

                    b.Navigation("Tutor");
                });

            modelBuilder.Entity("back.Models.AnimalFoto", b =>
                {
                    b.HasOne("back.Models.Animal", "Animal")
                        .WithMany("Fotos")
                        .HasForeignKey("AnimalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Animal");
                });

            modelBuilder.Entity("back.Models.RedeSocial", b =>
                {
                    b.HasOne("back.Models.Ong", "Ong")
                        .WithMany("RedesSociais")
                        .HasForeignKey("OngId");

                    b.HasOne("back.Models.Tutor", "Tutor")
                        .WithMany("RedesSociais")
                        .HasForeignKey("TutorId");

                    b.Navigation("Ong");

                    b.Navigation("Tutor");
                });

            modelBuilder.Entity("back.Models.Servico", b =>
                {
                    b.HasOne("back.Models.Ong", "Ong")
                        .WithMany("Servicos")
                        .HasForeignKey("OngId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ong");
                });

            modelBuilder.Entity("back.Models.Animal", b =>
                {
                    b.Navigation("Fotos");
                });

            modelBuilder.Entity("back.Models.Ong", b =>
                {
                    b.Navigation("Animais");

                    b.Navigation("RedesSociais");

                    b.Navigation("Servicos");
                });

            modelBuilder.Entity("back.Models.Tutor", b =>
                {
                    b.Navigation("Animais");

                    b.Navigation("RedesSociais");
                });
#pragma warning restore 612, 618
        }
    }
}
